{
  "type": "object",
  "description": "Basic data_source serializer mostly for returned values. This serializer flatten the\nservice properties so that from an API POV the data_source object only exists.",
  "properties": {
    "id": {
      "type": "integer",
      "readOnly": true,
      "description": "Data source id."
    },
    "type": {
      "type": "string",
      "readOnly": true,
      "description": "The type of the data source."
    },
    "schema": {
      "type": "object",
      "additionalProperties": {},
      "readOnly": true,
      "description": "The schema of the service."
    },
    "name": {
      "type": "string",
      "readOnly": true,
      "description": "Human name for this data source."
    },
    "page_id": {
      "type": "integer",
      "readOnly": true,
      "description": "Page this data source is linked to."
    },
    "order": {
      "type": "number",
      "format": "float",
      "readOnly": true,
      "description": "Lowest first."
    },
    "context_data": {
      "type": "object",
      "additionalProperties": {},
      "readOnly": true,
      "description": "The context data of the data source."
    },
    "table_id": {
      "type": "integer",
      "nullable": true,
      "description": "The id of the Baserow table we want the data for."
    },
    "integration_id": {
      "type": "integer",
      "nullable": true,
      "description": "The id of the Baserow integration we want the data for."
    },
    "view_id": {
      "type": "integer",
      "nullable": true,
      "description": "The id of the Baserow view we want the data for."
    },
    "filters": {
      "type": "array",
      "items": {
        "$ref": "./LocalBaserowTableServiceFilter.json"
      }
    },
    "filter_type": {
      "allOf": [
        {
          "$ref": "./ConditionTypeEnum.json"
        }
      ],
      "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
    },
    "search_query": {
      "type": "string",
      "description": "The query to apply to the service to narrow the results down.",
      "maxLength": 225
    },
    "field_id": {
      "type": "integer",
      "nullable": true,
      "description": "The id of the Baserow field we want to aggregate on."
    },
    "aggregation_type": {
      "type": "string",
      "description": "The field aggregation type.",
      "maxLength": 48
    }
  },
  "required": [
    "context_data",
    "id",
    "name",
    "order",
    "page_id",
    "schema",
    "type"
  ]
}