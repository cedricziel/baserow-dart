{
  "get": {
    "operationId": "workspace_list_teams",
    "description": "Lists all teams in a given workspace.",
    "parameters": [
      {
        "in": "query",
        "name": "search",
        "schema": {
          "type": "string"
        },
        "description": "Search for teams by their name."
      },
      {
        "in": "query",
        "name": "sorts",
        "schema": {
          "type": "string"
        },
        "description": "Sort teams by name or subjects."
      },
      {
        "in": "path",
        "name": "workspace_id",
        "schema": {
          "type": "integer"
        },
        "description": "Lists all teams in a given workspace.",
        "required": true
      }
    ],
    "tags": [
      "Teams"
    ],
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../components/schemas/TeamResponse.json"
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_GROUP_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  },
  "post": {
    "operationId": "workspace_create_team",
    "description": "Creates a new team.",
    "parameters": [
      {
        "in": "header",
        "name": "ClientSessionId",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
      },
      {
        "in": "path",
        "name": "workspace_id",
        "schema": {
          "type": "string",
          "pattern": "^[0-9]+$"
        },
        "required": true
      }
    ],
    "tags": [
      "Teams"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/Team.json"
          }
        },
        "application/x-www-form-urlencoded": {
          "schema": {
            "$ref": "../components/schemas/Team.json"
          }
        },
        "multipart/form-data": {
          "schema": {
            "$ref": "../components/schemas/Team.json"
          }
        }
      },
      "required": true
    },
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/TeamResponse.json"
            }
          }
        },
        "description": ""
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_USER_NOT_IN_GROUP",
                    "ERROR_SUBJECT_BAD_REQUEST",
                    "ERROR_TEAM_NAME_NOT_UNIQUE",
                    "ERROR_SUBJECT_NOT_IN_GROUP",
                    "ERROR_SUBJECT_TYPE_UNSUPPORTED"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_GROUP_DOES_NOT_EXIST",
                    "ERROR_SUBJECT_DOES_NOT_EXIST",
                    "ERROR_ROLE_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  }
}