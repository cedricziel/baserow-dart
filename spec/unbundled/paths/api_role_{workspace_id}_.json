{
  "get": {
    "operationId": "list_role_assignments",
    "description": "You can list the role assignments within a workspace, optionally filtered downto a specific scope inside of that workspace. If the scope isn't specified,the workspace will be considered the scope.",
    "parameters": [
      {
        "in": "query",
        "name": "scope_id",
        "schema": {
          "type": "integer"
        },
        "description": "The id of the scope you are trying to get all roleassignments for."
      },
      {
        "in": "query",
        "name": "scope_type",
        "schema": {
          "type": "string"
        },
        "description": "The type of scope you are trying to get all roleassignments for."
      },
      {
        "in": "path",
        "name": "workspace_id",
        "schema": {
          "type": "integer"
        },
        "description": "The workspace in which the role assignments are related to.",
        "required": true
      }
    ],
    "tags": [
      "Role assignments"
    ],
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../components/schemas/OpenApiRoleAssignment.json"
              }
            }
          }
        },
        "description": ""
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_USER_NOT_IN_GROUP",
                    "ERROR_REQUEST_BODY_VALIDATION"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_SCOPE_DOES_NOT_EXIST",
                    "ERROR_GROUP_DOES_NOT_EXIST",
                    "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  },
  "post": {
    "operationId": "assign_role",
    "description": "You can assign a role to a subject into the given workspace for the given scope with this endpoint. If you want to remove the role you can omit the role property.",
    "parameters": [
      {
        "in": "path",
        "name": "workspace_id",
        "schema": {
          "type": "integer"
        },
        "description": "The workspace in which the role assignment takes place.",
        "required": true
      }
    ],
    "tags": [
      "Role assignments"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/CreateRoleAssignment.json"
          }
        },
        "application/x-www-form-urlencoded": {
          "schema": {
            "$ref": "../components/schemas/CreateRoleAssignment.json"
          }
        },
        "multipart/form-data": {
          "schema": {
            "$ref": "../components/schemas/CreateRoleAssignment.json"
          }
        }
      },
      "required": true
    },
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/OpenApiRoleAssignment.json"
            }
          }
        },
        "description": ""
      },
      "204": {
        "description": "No response body"
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_USER_NOT_IN_GROUP",
                    "ERROR_REQUEST_BODY_VALIDATION",
                    "ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_SCOPE_DOES_NOT_EXIST",
                    "ERROR_GROUP_DOES_NOT_EXIST",
                    "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST",
                    "ERROR_SUBJECT_TYPE_DOES_NOT_EXIST",
                    "ERROR_ROLE_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  }
}