{
  "patch": {
    "operationId": "move_builder_page_element",
    "description": "Moves the element in the page before another element or at the end of the page if no before element is given. The elements must belong to the same page.",
    "parameters": [
      {
        "in": "header",
        "name": "ClientSessionId",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
      },
      {
        "in": "path",
        "name": "element_id",
        "schema": {
          "type": "integer"
        },
        "description": "The id of the element to move",
        "required": true
      }
    ],
    "tags": [
      "Builder elements"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/PatchedMoveElement.json"
          }
        },
        "application/x-www-form-urlencoded": {
          "schema": {
            "$ref": "../components/schemas/PatchedMoveElement.json"
          }
        },
        "multipart/form-data": {
          "schema": {
            "$ref": "../components/schemas/PatchedMoveElement.json"
          }
        }
      }
    },
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/Element_TypeElement.json"
            }
          }
        },
        "description": ""
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_REQUEST_BODY_VALIDATION",
                    "ERROR_ELEMENT_NOT_IN_SAME_PAGE"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_ELEMENT_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  }
}