{
  "get": {
    "operationId": "list_database_tables",
    "description": "Lists all the tables that are in the database related to the `database_id` parameter if the user has access to the database's workspace. A table is exactly as the name suggests. It can hold multiple fields, each having their own type and multiple rows. They can be added via the **create_database_table_field** and **create_database_table_row** endpoints.",
    "parameters": [
      {
        "in": "path",
        "name": "database_id",
        "schema": {
          "type": "integer"
        },
        "description": "Returns only tables that are related to the provided value.",
        "required": true
      }
    ],
    "tags": [
      "Database tables"
    ],
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../components/schemas/Table.json"
              }
            }
          }
        },
        "description": ""
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_USER_NOT_IN_GROUP"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_APPLICATION_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  },
  "post": {
    "operationId": "create_database_table",
    "description": "Creates synchronously a new table for the database related to the provided `database_id` parameter if the authorized user has access to the database's workspace.\n\nAs an alternative you can use the `create_async_database_table` for better performances and importing bigger files.",
    "parameters": [
      {
        "in": "header",
        "name": "ClientSessionId",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
      },
      {
        "in": "header",
        "name": "ClientUndoRedoActionGroupId",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
      },
      {
        "in": "path",
        "name": "database_id",
        "schema": {
          "type": "integer"
        },
        "description": "Creates a table for the database related to the provided value.",
        "required": true
      }
    ],
    "tags": [
      "Database tables"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/TableCreate.json"
          }
        },
        "application/x-www-form-urlencoded": {
          "schema": {
            "$ref": "../components/schemas/TableCreate.json"
          }
        },
        "multipart/form-data": {
          "schema": {
            "$ref": "../components/schemas/TableCreate.json"
          }
        }
      },
      "required": true
    },
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/Table.json"
            }
          }
        },
        "description": ""
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_USER_NOT_IN_GROUP",
                    "ERROR_REQUEST_BODY_VALIDATION",
                    "ERROR_INVALID_INITIAL_TABLE_DATA",
                    "ERROR_INITIAL_TABLE_DATA_LIMIT_EXCEEDED",
                    "ERROR_RESERVED_BASEROW_FIELD_NAME",
                    "ERROR_INITIAL_TABLE_DATA_HAS_DUPLICATE_NAMES",
                    "ERROR_INVALID_BASEROW_FIELD_NAME",
                    "ERROR_MAX_JOB_COUNT_EXCEEDED"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_APPLICATION_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  }
}