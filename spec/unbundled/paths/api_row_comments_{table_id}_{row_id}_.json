{
  "get": {
    "operationId": "get_row_comments",
    "description": "Returns all row comments for the specified table and row.\n\nThis is a **premium** feature.",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "schema": {
          "type": "integer"
        },
        "description": "Defines how many rows should be returned."
      },
      {
        "in": "query",
        "name": "offset",
        "schema": {
          "type": "integer"
        },
        "description": "Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned."
      },
      {
        "in": "query",
        "name": "page",
        "schema": {
          "type": "integer"
        },
        "description": "Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both."
      },
      {
        "in": "path",
        "name": "row_id",
        "schema": {
          "type": "integer"
        },
        "description": "The row to get row comments for.",
        "required": true
      },
      {
        "in": "query",
        "name": "size",
        "schema": {
          "type": "integer"
        },
        "description": "Can only be used in combination with the `page` parameter and defines how many rows should be returned."
      },
      {
        "in": "path",
        "name": "table_id",
        "schema": {
          "type": "integer"
        },
        "description": "The table the row is in.",
        "required": true
      }
    ],
    "tags": [
      "Database table rows"
    ],
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/PaginationSerializerRowComment.json"
            }
          }
        },
        "description": ""
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_USER_NOT_IN_GROUP"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_TABLE_DOES_NOT_EXIST",
                    "ERROR_ROW_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  },
  "post": {
    "operationId": "create_row_comment",
    "description": "Creates a comment on the specified row.\n\nThis is a **premium** feature.",
    "parameters": [
      {
        "in": "path",
        "name": "row_id",
        "schema": {
          "type": "integer"
        },
        "description": "The row to create a comment for.",
        "required": true
      },
      {
        "in": "path",
        "name": "table_id",
        "schema": {
          "type": "integer"
        },
        "description": "The table to find the row to comment on in.",
        "required": true
      }
    ],
    "tags": [
      "Database table rows"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/RowCommentCreate.json"
          }
        },
        "application/x-www-form-urlencoded": {
          "schema": {
            "$ref": "../components/schemas/RowCommentCreate.json"
          }
        },
        "multipart/form-data": {
          "schema": {
            "$ref": "../components/schemas/RowCommentCreate.json"
          }
        }
      },
      "required": true
    },
    "security": [
      {
        "UserSource JWT": []
      },
      {
        "JWT": []
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/RowComment.json"
            }
          }
        },
        "description": ""
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_USER_NOT_IN_GROUP",
                    "ERROR_INVALID_COMMENT_MENTION"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Machine readable error indicating what went wrong.",
                  "enum": [
                    "ERROR_TABLE_DOES_NOT_EXIST",
                    "ERROR_ROW_DOES_NOT_EXIST"
                  ]
                },
                "detail": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "string",
                      "description": "Human readable details about what went wrong."
                    },
                    {
                      "type": "object",
                      "format": "object",
                      "description": "Machine readable object about what went wrong."
                    }
                  ]
                }
              }
            }
          }
        },
        "description": ""
      }
    }
  }
}